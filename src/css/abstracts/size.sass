@use "sass:math"
@use 'sass' as *
@use "variables" as *
@use 'font' as *

// font （依存解決のため、一部移動）============
/// ブラウザのデフォルトフォントサイズ ※不変
/// @group font
$font-size-browser: 16px
/// ブラウザのデフォルトフォントサイズ (SP) ※不変
/// @group font
$font-size-browser-sp: 16px * 2

/// @group font
$font-size-base-px: 14px
/// @group font
$font-size-base: math.div($font-size-base-px, $font-size-browser) * 1rem
/// @group font
$font-size-base-px-sp: 13px * 2
/// @group font
$font-size-base-sp: math.div($font-size-base-px-sp, $font-size-browser-sp) * 1rem

/// ウィンドウ幅によって可変になるフォントサイズ（最小・最大値込み）
/// @param {Number(any)} $font-size[14px] - デザイン上のフォントサイズ(px)
/// @param {Number(any)} $min[$font-size * ($base-width-min / $base-width-pc)] - 最小値(px)
/// @example
/// .selector {
///   @include font-size-variable-pc(20px);
///   @include font-size-variable-pc(20px, 12px);
/// }
/// @group font
=font-size-variable-pc($font-size, $min: 0)
  $font-size: if($font-size, $font-size, $font-size-base-px)
  $min: if($min > 0, $min, if( $enableMinFontSize and remove-unit($font-size * math.div($base-width-min, $base-width-pc)) < 10, 10px, 0))
  font-size: +size-variable-pc($font-size)
  @if $min > 0
    @media screen and (max-width: #{math.ceil($base-width-pc * math.div(remove-unit($min), remove-unit($font-size)))})
      font-size: remove-unit($min) * 1px

/// ウィンドウ幅によって可変になるフォントサイズ（最小・最大値込み） (SP)
/// @param {Number(any)} $font-size[13px * 2] - デザイン上のフォントサイズ(px)
/// @param {Number(any)} $min[$font-size * ($base-width-min-sp / $base-width-sp)] - 最小値(px)
/// @example
/// .selector {
///   @include font-size-variable-sp(30px);
///   @include font-size-variable-sp(30px, 12px);
/// }
/// @group font
=font-size-variable-sp($font-size: $font-size-base-px-sp, $min: 0)
  $min: if($min > 0, $min, if( $enableMinFontSize and remove-unit($font-size * math.div($base-width-min-sp, $base-width-sp)) < 20, 20px, 0))
  font-size: size-variable-sp($font-size)
  @if $min > 0
    @media screen and (max-width: #{sp-px(math.ceil($base-width-sp * math.div(remove-unit($min), remove-unit($font-size))))})
      font-size: sp-px($min)

//
// size
//

/// @param {Number(any)} $number - 指定サイズ
/// @group size
@function pc-window-w-ratio($val)
  @return math.div(remove-unit($val), remove-unit($base-width-pc)) * 100vw
/// @param {Number(any)} $number - 指定サイズ
/// @group size
@function pc-window-h-ratio($val)
  @return math.div(remove-unit($val), remove-unit($base-height)) * 100vh
/// @param {Number(any)} $number - 指定サイズ
/// @group size
@function pc-window-w-ratio-min($val)
  @return math.div(remove-unit($val), remove-unit($base-width-min)) * 100vw
/// @param {Number(any)} $number - 指定サイズ
/// @group size
@function pc-window-h-ratio-min($val)
  @return math.div(remove-unit($val), remove-unit($base-height-min)) * 100vh

/// @param {Number(any)} $number - 指定サイズ
/// @group size
@function sp-px($val)
  @return math.div(remove-unit($val), 2) * 1px

/// @param {Number(any)} $number - 指定サイズ
/// @group size
@function sp-window-w-ratio($val)
  @return math.div(remove-unit($val), remove-unit($base-width-sp)) * 100vw
/// @param {Number(any)} $number - 指定サイズ
/// @group size
@function sp-window-h-ratio($val)
  @return math.div(remove-unit($val), remove-unit($base-height-sp)) * 100vh
/// @param {Number(any)} $number - 指定サイズ
/// @group size
@function sp-window-h-ratio-modal($val)
  @return math.div(remove-unit($val), remove-unit($base-height-modal-sp)) * 100vh

/// @param {Number(any)} $number - 指定サイズ
/// @group size
@function sp-land-window-w-ratio($val)
  @return math.div(remove-unit($val), remove-unit($base-width-sp-land)) * 100vw
/// @param {Number(any)} $number - 指定サイズ
/// @group size
@function sp-land-window-h-ratio($val)
  @return math.div(remove-unit($val), remove-unit($base-height-sp-land)) * 100vw

/// @group size
@function size-variable-pc-small($size)
  @return math.div(remove-unit($size), remove-unit($base-width-min)) * 100vw

/// htmlタグのフォントサイズを基準とした相対的なサイズ
/// （html タグのフォントサイズがウィンドウ幅に応じて可変の場合のみ、この値も可変となる）
///
/// @param {Number(px)} $size - デザイン上のpx値サイズ
/// @return {Number(rem)} - htmlタグのフォントサイズを基準とした相対的なサイズ
/// @group size
@function size-variable-pc($size)
  @return math.div(remove-unit($size), remove-unit($font-size-browser)) * 1rem

/// ウィンドウ幅に応じた可変サイズ (PC)
///
/// @param {Number(px)} $size - デザイン上のpx値サイズ
/// @return {Number(rem)} - ウィンドウ幅に応じた可変サイズ
/// @group size
@function size-viewport-pc($size)
  @return math.div(remove-unit($size), remove-unit($base-width-pc)) * 100vw

/// htmlタグのフォントサイズを基準とした相対的なサイズ (SP)
/// （html タグのフォントサイズがウィンドウ幅に応じて可変の場合のみ、この値も可変となる）
///
/// @param {Number(px)} $size - デザイン上のpx値サイズ
/// @return {Number(rem)} - htmlタグのフォントサイズを基準とした相対的なサイズ
/// @group size
@function size-variable-sp($size)
  @return math.div(remove-unit($size), remove-unit($font-size-browser-sp)) * 1rem

/// ウィンドウ幅に応じた可変サイズ (SP)
///
/// @param {Number(px)} $size - デザイン上のpx値サイズ
/// @return {Number(rem)} - ウィンドウ幅に応じた可変サイズ
/// @group size
@function size-viewport-sp($size)
  @return math.div(remove-unit($size), remove-unit($base-width-sp)) * 100vw

@function size-variable-tb($size)
  @return math.div(remove-unit($size), remove-unit($base-width-tb)) * 100vw

/// @group size
$ui-height-sp: size-variable-sp(129)

//
// content
//
/// @group size
$margin-content-pc-thin: size-variable-pc(40)
/// @group size
$margin-content-pc-large: size-variable-pc(120)
/// @group size
$margin-content-inner-pc: size-variable-pc(200)
/// @group size
$margin-negative-content-pc: calc((100vw - #{$width-content-pc}) / 2 * -1)
/// @group size
$margin-negative-content-single-pc: calc((100vw - #{$width-content-single-pc}) / 2 * -1)

/// @group size
$margin-content-sp: size-variable-sp(40)
$margin-content-sp-large: size-variable-sp(80)
/// @group size
$margin-negative-content-sp: -$margin-content-sp



//
// components
//

/// @group size
$height-header: 70px
/// @group size
$height-header-sp: size-variable-sp(150)

/// @group size
$height-button: 80px
/// @group size
$height-button-sp: size-variable-sp(120)

/// @group size
=margin-content-pc
  margin: 0 $margin-content-pc

/// @group size
=margin-content-sp
  margin: 0 $margin-content-sp

/// @group size
=margin-content
  +media-pc
    +margin-content-pc
  +media-sp
    +margin-content-sp

/// @group size
=full-width-pc
  margin: 0 (-$margin-content-pc)

/// @group size
=full-width-sp
  margin: 0 (-$margin-content-sp)

/// @group size
=full-width
  +media-pc
    +full-width-pc
  +media-sp
    +full-width-sp

/// @group size
=margin-inner-pc
  margin: 0 $margin-content-inner-pc

/// @group size
=margin-inner
  +media-pc
    +margin-inner-pc

/// @group size
=max-width
  max-width: $base-width-max
